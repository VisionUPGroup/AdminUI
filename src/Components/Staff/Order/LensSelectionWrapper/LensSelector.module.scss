@import '../styles/variables';

.lensSelector {
  display: flex;
  flex-direction: column;
  min-height: 600px;
  background: $surface;
  border-radius: 1rem;
  overflow: hidden;

  // Header Section
  .header {
    display: flex;
    align-items: center;
    padding: 1.5rem 2rem;
    border-bottom: 1px solid rgba($border-color, 0.1);
    background: linear-gradient(to right, rgba($primary, 0.05), rgba($primary, 0.02));

    .backButton {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      padding: 0.5rem 1rem;
      border: none;
      background: rgba($surface, 0.8);
      border-radius: 0.5rem;
      color: $text-secondary;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.2s ease;

      &:hover {
        background: rgba($surface, 1);
        color: $text-primary;
        transform: translateX(-2px);
      }
    }

    .headerContent {
      margin-left: 1.5rem;

      h2 {
        margin: 0;
        font-size: 1.5rem;
        font-weight: 600;
        color: $text-primary;
      }

      p {
        margin: 0.25rem 0 0;
        color: $text-secondary;
        font-size: 0.875rem;
      }
    }
  }

  // Eye Selector Section
  .eyeSelector {
    display: flex;
    gap: 1rem;
    padding: 1.5rem 2rem;
    background: linear-gradient(to bottom, rgba($surface, 1), rgba($surface, 0.5));

    .eyeButton {
      flex: 1;
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 1.25rem;
      border: 2px solid rgba($border-color, 0.2);
      border-radius: 0.75rem;
      background: $surface;
      cursor: pointer;
      transition: all 0.2s ease;

      &:hover {
        border-color: rgba($primary, 0.4);
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba($primary, 0.1);
      }

      &.active {
        border-color: $primary;
        background: linear-gradient(45deg, rgba($primary, 0.05), rgba($primary, 0.02));

        .eyeContent {
          .eyeInfo {
            .eyeTitle {
              color: $primary;
            }
          }
        }
      }

      .eyeContent {
        display: flex;
        align-items: center;
        gap: 1rem;

        svg {
          color: $primary;
        }

        .eyeInfo {
          display: flex;
          flex-direction: column;

          .eyeTitle {
            font-weight: 600;
            color: $text-primary;
          }

          .eyeSubtitle {
            font-size: 0.875rem;
            color: $text-secondary;
          }
        }
      }

      .checkIcon {
        color: $success;
        background: rgba($success, 0.1);
        padding: 0.5rem;
        border-radius: 50%;
      }
    }
  }

  // Content Section
  .content {
    flex: 1;
    padding: 1.5rem 2rem;
    overflow-y: auto;

    .sectionTitle {
      font-size: 1.25rem;
      font-weight: 600;
      color: $text-primary;
      margin: 0 0 1.25rem;
    }

    .typeSelection {
      margin-bottom: 2rem;

      .typeGrid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        gap: 1rem;

        .typeCard {
          display: flex;
          align-items: center;
          justify-content: space-between;
          padding: 1.5rem;
          border: 2px solid rgba($border-color, 0.2);
          border-radius: 0.75rem;
          background: $surface;
          cursor: pointer;
          transition: all 0.2s ease;
          text-align: left;

          &:hover {
            border-color: rgba($primary, 0.4);
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba($primary, 0.1);
          }

          &.active {
            border-color: $primary;
            background: linear-gradient(45deg, rgba($primary, 0.05), rgba($primary, 0.02));

            .typeContent {
              h4 {
                color: $primary;
              }
            }
          }

          .typeContent {
            flex: 1;

            h4 {
              margin: 0 0 0.5rem;
              font-size: 1.125rem;
              font-weight: 600;
              color: $text-primary;
            }

            p {
              margin: 0;
              font-size: 0.875rem;
              color: $text-secondary;
              line-height: 1.5;
            }
          }

          .selectedIndicator {
            color: $success;
            background: rgba($success, 0.1);
            padding: 0.5rem;
            border-radius: 50%;
            margin-left: 1rem;
          }
        }
      }
    }

    .lensOptions {
      .lensGrid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 1.5rem;
        margin-top: 1rem;

        .lensCard {
          background: $surface;
          border-radius: 1rem;
          overflow: hidden;
          box-shadow: 0 2px 8px rgba($shadow, 0.08);
          cursor: pointer;
          transition: all 0.3s ease;

          &:hover {
            transform: translateY(-4px);
            box-shadow: 0 8px 16px rgba($shadow, 0.12);
          }

          &.selected {
            border: 2px solid $primary;
            
            .lensImage {
              .selectedOverlay {
                opacity: 1;
              }
            }
          }

          .lensImage {
            position: relative;
            height: 200px;
            background: linear-gradient(45deg, rgba($primary, 0.05), rgba($primary, 0.02));
            
            img {
              width: 100%;
              height: 100%;
              object-fit: cover;
            }

            .selectedOverlay {
              position: absolute;
              inset: 0;
              background: rgba($primary, 0.8);
              display: flex;
              align-items: center;
              justify-content: center;
              color: $surface;
              opacity: 0;
              transition: opacity 0.3s ease;
            }
          }

          .lensInfo {
            padding: 1.5rem;

            h4 {
              margin: 0 0 0.75rem;
              font-size: 1.125rem;
              font-weight: 600;
              color: $text-primary;
            }

            p {
              margin: 0 0 1rem;
              font-size: 0.875rem;
              color: $text-secondary;
              line-height: 1.6;
            }

            .lensDetails {
              display: flex;
              justify-content: space-between;
              align-items: center;
              margin-top: 1rem;
              padding-top: 1rem;
              border-top: 1px solid rgba($border-color, 0.1);

              .price {
                font-size: 1.25rem;
                font-weight: 600;
                color: $primary;
              }

              .rating {
                display: flex;
                align-items: center;
                gap: 0.25rem;

                span {
                  margin-left: 0.5rem;
                  font-size: 0.875rem;
                  color: $text-secondary;
                }
              }
            }
          }
        }
      }
    }
  }

  // Footer Section
  .footer {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 1.5rem 2rem;
    background: linear-gradient(to top, rgba($surface, 1), rgba($surface, 0.5));
    border-top: 1px solid rgba($border-color, 0.1);

    .selectionSummary {
      p {
        margin: 0;
        color: $text-secondary;
        font-size: 0.875rem;
      }
    }

    .completeButton {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      padding: 0.875rem 1.5rem;
      background: $primary;
      color: $surface;
      border: none;
      border-radius: 0.5rem;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.2s ease;

      &:hover:not(:disabled) {
        background: darken($primary, 5%);
        transform: translateY(-2px);
      }

      &:disabled {
        background: rgba($border-color, 0.5);
        cursor: not-allowed;
      }
    }
  }

  // Modal
  .lensDetailsModal {
    position: fixed;
    inset: 0;
    background: rgba($shadow, 0.4);
    backdrop-filter: blur(4px);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 50;

    .modalContent {
      width: 90%;
      max-width: 600px;
      max-height: 90vh;
      background: $surface;
      border-radius: 1rem;
      padding: 2rem;
      overflow-y: auto;
      position: relative;

      .selectButton {
        width: 100%;
        padding: 1rem;
        margin-top: 1.5rem;
        background: $primary;
        color: $surface;
        border: none;
        border-radius: 0.5rem;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.2s ease;

        &:hover {
          background: darken($primary, 5%);
        }
      }
    }
  }

  // Loading State
  .loading {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 3rem;
    color: $text-secondary;
    gap: 1rem;

    .spinner {
      width: 2rem;
      height: 2rem;
      border: 3px solid rgba($primary, 0.1);
      border-top-color: $primary;
      border-radius: 50%;
      animation: spin 1s linear infinite;
    }
  }

  // Error State
  .error {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin: 1rem 2rem;
    padding: 1rem;
    background: rgba($error, 0.1);
    border-radius: 0.5rem;
    color: $error;

    button {
      margin-left: auto;
      padding: 0.5rem 1rem;
      background: rgba($error, 0.2);
      border: none;
      border-radius: 0.25rem;
      color: $error;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.2s ease;

      &:hover {
        background: rgba($error, 0.3);
      }
    }
  }
}

// Animations
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

// Responsive Design
@media (max-width: 768px) {
  .lensSelector {
    .header {
      padding: 1rem;
      
      .headerContent {
        h2 {
          font-size: 1.25rem;
        }
      }
    }

    .eyeSelector {
      padding: 1rem;
      flex-direction: column;
    }

    .content {
      padding: 1rem;
    }

    .footer {
      padding: 1rem;
      flex-direction: column;
      gap: 1rem;

      .completeButton {
        width: 100%;
      }
    }
  }
}