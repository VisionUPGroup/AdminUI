
@import './variables';
@import './mixins';

.customerSection {
  min-height: calc(100vh - 200px);
  background: $background;
  padding: $spacing-xl;

  .welcomeHeader {
    text-align: center;
    margin-bottom: $spacing-2xl;
    animation: fadeIn 0.5s ease-out;

    .icon {
      color: $primary;
      width: 48px;
      height: 48px;
      margin-bottom: $spacing-md;
    }

    h1 {
      @include heading-1;
      color: $text-primary;
      margin-bottom: $spacing-sm;
    }

    p {
      color: $text-secondary;
      font-size: $font-size-lg;
    }
  }

  .searchContainer {
    @include glass-effect;
    display: flex;
    gap: $spacing-lg;
    padding: $spacing-lg;
    margin-bottom: $spacing-xl;
    border-radius: $border-radius-xl;
    background: linear-gradient(to right, rgba($surface, 0.9), rgba($primary-light, 0.9));

    .searchInput {
      flex: 1;
      position: relative;

      .searchIcon {
        position: absolute;
        left: $spacing-md;
        top: 50%;
        transform: translateY(-50%);
        color: $primary;
        transition: $transition-base;
      }

      input {
        @include input-modern;
        width: 100%;
        padding-left: $spacing-2xl;
        font-size: $font-size-lg;
        background: rgba($surface, 0.8);

       &:focus {
          background: $surface;
          & + .searchIcon {
            transform: translateY(-50%) scale(1.1);
            color: darken($primary, 10%);
          }
        }
      }

      .clearButton {
        @include button-icon;
        position: absolute;
        right: $spacing-md;
        top: 50%;
        transform: translateY(-50%);
        
        &:hover {
          transform: translateY(-50%) rotate(90deg);
        }
      }
    }

    .addButton {
      @include button-primary;
      display: flex;
      align-items: center;
      gap: $spacing-sm;
      padding: $spacing-md $spacing-lg;
      
      svg {
        transition: $transition-base;
      }
      
      &:hover svg {
        transform: rotate(90deg);
      }
    }
  }

  .customerList {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
    gap: $spacing-lg;
    margin-top: $spacing-xl;

    .customerCard {
      @include card-interactive;
      padding: $spacing-lg;
      border: 2px solid transparent;
      background: linear-gradient(145deg, $surface, $background);
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      position: relative;
      overflow: hidden;

      &:hover {
        border-color: rgba($primary, 0.3);
        transform: translateY(-4px);

        .avatar {
          transform: scale(1.1);
        }
      }

      &.selected {
        border-color: $primary;
        background: linear-gradient(145deg, $surface, $primary-light);

        .customerInfo {
          h3 {
            color: $primary;
          }
        }

        .selectedCheck {
          opacity: 1;
          transform: scale(1);
        }
      }

      .customerInfo {
        display: flex;
        align-items: flex-start;
        gap: $spacing-lg;

        .avatar {
          background: $primary-light;
          padding: $spacing-sm;
          border-radius: $border-radius;
          color: $primary;
          transition: transform 0.3s ease;
        }

        .details {
          flex: 1;

          h3 {
            @include heading-2;
            margin-bottom: $spacing-sm;
            color: $text-primary;
          }

          .contactInfo {
            display: flex;
            flex-direction: column;
            gap: $spacing-sm;

            span {
              display: flex;
              align-items: center;
              gap: $spacing-sm;
              color: $text-secondary;
              font-size: $font-size-sm;

              svg {
                color: $primary;
                flex-shrink: 0;
              }
            }
          }
        }

        .selectedCheck {
          position: absolute;
          top: $spacing-md;
          right: $spacing-md;
          width: 24px;
          height: 24px;
          background: $primary;
          color: $surface;
          border-radius: $border-radius-full;
          @include flex-center;
          opacity: 0;
          transform: scale(0.8);
          transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }
      }
    }
  }

  .noResults, .emptyState {
    @include flex-center;
    flex-direction: column;
    gap: $spacing-lg;
    min-height: 300px;
    text-align: center;
    padding: $spacing-2xl;
    @include card;
    background: linear-gradient(145deg, $surface, $background);

    svg {
      color: $text-secondary;
      opacity: 0.5;
    }

    h3 {
      @include heading-2;
      color: $text-primary;
    }

    p {
      color: $text-secondary;
      max-width: 300px;
      margin-bottom: $spacing-md;
    }

    button {
      @include button-primary;
      display: flex;
      align-items: center;
      gap: $spacing-sm;
    }
  }

  .modalOverlay {
    position: fixed;
    inset: 0;
    background: rgba($text-primary, 0.4);
    backdrop-filter: blur(4px);
    @include flex-center;
    z-index: $z-index-modal;
  }

  .modalContent {
    width: 100%;
    max-width: 500px;
    @include card;
    background: $surface;
    overflow: hidden;

    .modalHeader {
      @include flex-between;
      padding: $spacing-lg;
      background: linear-gradient(to right, $primary-light, $surface);
      border-bottom: 1px solid rgba($text-secondary, 0.1);

      h2 {
        @include heading-2;
        color: $text-primary;
      }

      button {
        @include button-icon;
        
        &:hover {
          transform: rotate(90deg);
        }
      }
    }

    form {
      padding: $spacing-xl;
      display: grid;
      gap: $spacing-lg;

      .formField {
        position: relative;

        label {
          display: block;
          margin-bottom: $spacing-xs;
          color: $text-secondary;
          font-size: $font-size-sm;
          font-weight: 500;
        }

        input {
          @include input-modern;

          &.error {
            border-color: $error;
            background: $error-light;
          }
          
          &.dateInput {
            cursor: pointer;
            
            &::-webkit-calendar-picker-indicator {
              cursor: pointer;
              opacity: 0.6;
              
              &:hover {
                opacity: 1;
              }
            }
          }
        }

        .errorText {
          position: absolute;
          bottom: -18px;
          left: 0;
          color: $error;
          font-size: $font-size-xs;
        }
      }

      .formRow {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: $spacing-lg;
      }

      .modalActions {
        display: flex;
        justify-content: flex-end;
        gap: $spacing-md;
        margin-top: $spacing-lg;
        padding-top: $spacing-lg;
        border-top: 1px solid rgba($text-secondary, 0.1);

        .cancelButton {
          @include button-secondary;
        }

        .submitButton {
          @include button-primary;
          min-width: 140px;
          
          .spinner {
            animation: spin 1s linear infinite;
            margin-right: $spacing-sm;
          }
        }
      }
    }
  }
}

@keyframes spin {
  100% {
    transform: rotate(360deg);
  }
}

// Responsive Styles
@include respond-to(sm) {
  .customerSection {
    padding: $spacing-lg;

    .searchContainer {
      flex-direction: column;
    }

    .formRow {
      grid-template-columns: 1fr !important;
    }

    .modalContent {
      margin: $spacing-md;
      width: calc(100% - #{$spacing-md * 2});
    }
  }
}

@include respond-to(md) {
  .customerSection {
    .searchContainer {
      flex-direction: row;
    }

    .customerList {
      grid-template-columns: repeat(2, 1fr);
    }
  }
}

@include respond-to(lg) {
  .customerSection {
    padding: $spacing-xl;

    .customerList {
      grid-template-columns: repeat(3, 1fr);
    }
  }
}