@import './variables';
@import './mixins';

.customerSection {
  min-height: 100vh;
  background: $background;
  padding: $spacing-xl;

  .header {
    @include flex-between;
    margin-bottom: $spacing-xl;

    .backButton {
      @include button-secondary;
      gap: $spacing-sm;
      
      &:hover {
        transform: translateX(-4px);
        svg {
          animation: slideLeft 0.5s ease;
        }
      }
    }

    .addButton {
      @include button-primary;
      gap: $spacing-sm;
      
      svg {
        transition: $transition-base;
      }
      
      &:hover svg {
        transform: rotate(90deg);
      }
    }
  }

  .searchContainer {
    @include card-base;
    padding: $spacing-lg;
    margin-bottom: $spacing-xl;
    background: linear-gradient(to right, $primary-light, $surface);
    border: 1px solid rgba($primary, 0.1);

    .searchInput {
      position: relative;
      max-width: 800px;
      margin: 0 auto;

      .searchIcon {
        position: absolute;
        left: $spacing-lg;
        top: 50%;
        transform: translateY(-50%);
        color: $primary;
        transition: $transition-base;
      }

      input {
        @include input-modern;
        padding-left: $spacing-2xl;
        padding-right: $spacing-2xl;
        font-size: $font-size-lg;
        
        &:focus + .searchIcon {
          transform: translateY(-50%) scale(1.1);
        }
      }

      .clearButton {
        @include button-icon;
        position: absolute;
        right: $spacing-sm;
        top: 50%;
        transform: translateY(-50%);
        
        &:hover {
          transform: translateY(-50%) rotate(90deg);
        }
      }
    }
  }

  .customerList {
    display: grid;
    gap: $spacing-lg;
    margin-bottom: $spacing-xl;
    
    .customerCard {
      @include card-interactive;
      padding: $spacing-xl;
      border: 2px solid transparent;
      background: linear-gradient(145deg, $surface, $background);
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);

      &:hover {
        border-color: rgba($primary, 0.3);
        transform: translateY(-4px) scale(1.01);
      }

      &.selected {
        border-color: $primary;
        background: linear-gradient(145deg, $surface, $primary-light);

        .checkmark {
          opacity: 1;
          transform: scale(1);
        }

        h3 {
          color: $primary;
        }
      }

      .customerInfo {
        h3 {
          @include heading-2;
          font-size: $font-size-xl;
          margin-bottom: $spacing-sm;
          display: flex;
          align-items: center;
          justify-content: space-between;

          .birthday {
            @include flex-center;
            gap: $spacing-xs;
            font-size: $font-size-sm;
            color: $text-secondary;
            background: rgba($primary, 0.1);
            padding: $spacing-xs $spacing-sm;
            border-radius: $border-radius-full;
            
            svg {
              color: $primary;
            }
          }
        }

        .details {
          display: grid;
          gap: $spacing-md;

          span {
            @include flex-center;
            gap: $spacing-sm;
            color: $text-secondary;
            font-size: $font-size-sm;

            svg {
              color: $primary;
              flex-shrink: 0;
            }
          }
        }
      }

      .checkmark {
        position: absolute;
        top: $spacing-lg;
        right: $spacing-lg;
        width: 24px;
        height: 24px;
        background: $primary;
        color: $surface;
        border-radius: $border-radius-full;
        @include flex-center;
        opacity: 0;
        transform: scale(0.8);
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      }
    }
  }

  // Add Customer Modal
  .modalOverlay {
    position: fixed;
    inset: 0;
    background: rgba($text-primary, 0.4);
    backdrop-filter: blur(8px);
    @include flex-center;
    z-index: $z-index-modal;
    @include fade-in;
  }

  .modalContent {
    width: 100%;
    max-width: 600px;
    @include card-base;
    background: $surface;
    @include slide-in;
    overflow: hidden;

    .modalHeader {
      @include flex-between;
      padding: $spacing-lg $spacing-xl;
      background: linear-gradient(to right, $primary-light, $surface);
      border-bottom: 1px solid rgba($text-secondary, 0.1);

      h2 {
        @include heading-2;
        color: $text-primary;
      }

      button {
        @include button-icon;
        
        &:hover {
          transform: rotate(90deg);
        }
      }
    }

    form {
      padding: $spacing-xl;
      display: grid;
      gap: $spacing-lg;

      .formField {
        position: relative;

        label {
          display: block;
          margin-bottom: $spacing-xs;
          color: $text-secondary;
          font-size: $font-size-sm;
          font-weight: 500;
        }

        input {
          @include input-modern;

          &.error {
            border-color: $error;
            background: $error-light;
          }
          
          &.dateInput {
            cursor: pointer;
            
            &::-webkit-calendar-picker-indicator {
              cursor: pointer;
              opacity: 0.6;
              transition: $transition-base;
              
              &:hover {
                opacity: 1;
              }
            }
          }
        }

        .errorText {
          position: absolute;
          left: 0;
          bottom: -$spacing-md;
          color: $error;
          font-size: $font-size-xs;
          display: flex;
          align-items: center;
          gap: $spacing-xs;
          
          svg {
            width: 14px;
            height: 14px;
          }
        }
      }

      .formRow {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: $spacing-lg;
      }

      .modalActions {
        display: flex;
        justify-content: flex-end;
        gap: $spacing-md;
        margin-top: $spacing-lg;
        padding-top: $spacing-lg;
        border-top: 1px solid rgba($text-secondary, 0.1);

        .cancelButton {
          @include button-secondary;
        }

        .submitButton {
          @include button-primary;
          min-width: 140px;

          .spinner {
            @include loading-spinner;
            margin-right: $spacing-sm;
          }
        }
      }
    }
  }

  // States
  .error {
    @include card-base;
    background: $error-light;
    color: $error;
    padding: $spacing-md $spacing-lg;
    margin-bottom: $spacing-lg;
    @include flex-between;
    border-left: 4px solid $error;
    animation: slideIn 0.3s ease;
    
    svg {
      flex-shrink: 0;
    }
    
    .closeError {
      @include button-icon;
      color: $error;
      
      &:hover {
        background: rgba($error, 0.1);
      }
    }
  }

  .loading {
    @include flex-center;
    flex-direction: column;
    padding: $spacing-2xl;
    color: $text-secondary;
    gap: $spacing-lg;

    .spinner {
      @include loading-spinner;
      width: 40px;
      height: 40px;
      border-top-color: $primary;
    }
  }

  .emptyState {
    @include flex-center;
    flex-direction: column;
    padding: $spacing-2xl;
    text-align: center;
    gap: $spacing-lg;
    @include card-base;
    background: linear-gradient(145deg, $surface, $background);

    svg {
      color: $text-secondary;
      opacity: 0.5;
      animation: float 3s ease-in-out infinite;
    }

    h3 {
      @include heading-2;
      color: $text-primary;
    }

    p {
      color: $text-secondary;
      margin-bottom: $spacing-lg;
    }

    button {
      @include button-primary;
      gap: $spacing-sm;
    }
  }

  // Animations
  @keyframes slideLeft {
    0% { transform: translateX(0); }
    50% { transform: translateX(-4px); }
    100% { transform: translateX(0); }
  }

  @keyframes float {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-10px); }
  }

  // Responsive Styles
  @include respond-to(sm) {
    padding: $spacing-lg;

    .formRow {
      grid-template-columns: 1fr !important;
    }

    .modalContent {
      margin: $spacing-md;
      max-height: calc(100vh - #{$spacing-md * 2});
      overflow-y: auto;
    }
  }

  @include respond-to(md) {
    .customerList {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @include respond-to(lg) {
    padding: $spacing-xl;

    .customerList {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  // Custom Scrollbar
  .modalContent {
    @include custom-scrollbar;
  }
}